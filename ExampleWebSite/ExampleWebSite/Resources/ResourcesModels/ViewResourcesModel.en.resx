<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewPropertiesMessage" xml:space="preserve">
    <value>Additional fields</value>
  </data>
  <data name="AddNewPropertiesMessageDetails" xml:space="preserve">
    <value>you can use additional fields to specify additional data about the collection elements for example for books year of publication</value>
  </data>
  <data name="AdminCanDoText1" xml:space="preserve">
    <value>The site admin can block and unblock user accounts</value>
  </data>
  <data name="AdminCanDoText2" xml:space="preserve">
    <value>Admin Can create Collections and collection items on behalf of site users. To do this, you need to find the user on whose behalf you want to create a collection or element and click on the create collection button or go to the collection and click add element</value>
  </data>
  <data name="AdminPage" xml:space="preserve">
    <value>Admin panel</value>
  </data>
  <data name="Alcohol" xml:space="preserve">
    <value>Alcohol</value>
  </data>
  <data name="AuthorizedPlease" xml:space="preserve">
    <value>Please Log in</value>
  </data>
  <data name="author_will_be" xml:space="preserve">
    <value>The author will be</value>
  </data>
  <data name="Avtor" xml:space="preserve">
    <value>Avtor</value>
  </data>
  <data name="Ban" xml:space="preserve">
    <value>Block a user</value>
  </data>
  <data name="Baned" xml:space="preserve">
    <value>Account is baned</value>
  </data>
  <data name="BanedUsers" xml:space="preserve">
    <value>Banned authors</value>
  </data>
  <data name="Blocking_status" xml:space="preserve">
    <value>Status of ban</value>
  </data>
  <data name="Books" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="BoolProperties" xml:space="preserve">
    <value>Switches</value>
  </data>
  <data name="boolrPropertiesEl" xml:space="preserve">
    <value>Additional switch field</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ChangePhone" xml:space="preserve">
    <value>Changing the phone number</value>
  </data>
  <data name="Coins" xml:space="preserve">
    <value>Coins</value>
  </data>
  <data name="CollectionTheme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="CollectionTitle" xml:space="preserve">
    <value>Collection Title</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateCollectionFromUser" xml:space="preserve">
    <value>Create a collection on behalf of the user</value>
  </data>
  <data name="DateProperties" xml:space="preserve">
    <value>Dates</value>
  </data>
  <data name="datePropertiesEl" xml:space="preserve">
    <value>Additional date field</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>See More</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditConfirm" xml:space="preserve">
    <value>Apply Changes</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="ErrorLoadDataMessage" xml:space="preserve">
    <value>Failed to load data</value>
  </data>
  <data name="FindUser" xml:space="preserve">
    <value>Find the author</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot my password</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>Common</value>
  </data>
  <data name="GiveAdmin_role" xml:space="preserve">
    <value>Give admin role</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="InComment" xml:space="preserve">
    <value>in the comments</value>
  </data>
  <data name="InProperties" xml:space="preserve">
    <value>the text was found in the description</value>
  </data>
  <data name="IsBaned" xml:space="preserve">
    <value>User Status</value>
  </data>
  <data name="Languages" xml:space="preserve">
    <value>Languages</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="MaxCommentLenght500" xml:space="preserve">
    <value>The maximum length of a comment is 500 characters</value>
  </data>
  <data name="Minerals" xml:space="preserve">
    <value>Minerals</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>More Information</value>
  </data>
  <data name="More_Info" xml:space="preserve">
    <value>More info</value>
  </data>
  <data name="MyCollections" xml:space="preserve">
    <value>My Collections</value>
  </data>
  <data name="NewCollections" xml:space="preserve">
    <value>New collections</value>
  </data>
  <data name="NoHasTags" xml:space="preserve">
    <value>does not contain tags</value>
  </data>
  <data name="NoHaveAccount" xml:space="preserve">
    <value>do you have an account?</value>
  </data>
  <data name="NotBaned" xml:space="preserve">
    <value>Account is not baned</value>
  </data>
  <data name="Nothing found" xml:space="preserve">
    <value>Nothing found</value>
  </data>
  <data name="NumberProperties" xml:space="preserve">
    <value>Number fields</value>
  </data>
  <data name="numberPropertiesEl" xml:space="preserve">
    <value>Additional numeric field</value>
  </data>
  <data name="OfTheCollection" xml:space="preserve">
    <value>of the collection :</value>
  </data>
  <data name="OperationsWithUser" xml:space="preserve">
    <value>Operations with user</value>
  </data>
  <data name="PersonalData" xml:space="preserve">
    <value>Personal data</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PhoneNumber_is_null" xml:space="preserve">
    <value>Phone number is not specified</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RemoveAdmin_role" xml:space="preserve">
    <value>Romove admin role</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchString" xml:space="preserve">
    <value>Text (descriptions, titles, comments)</value>
  </data>
  <data name="Stamps" xml:space="preserve">
    <value>Stamps</value>
  </data>
  <data name="StringProperties" xml:space="preserve">
    <value>Text fields</value>
  </data>
  <data name="stringPropertiesEl" xml:space="preserve">
    <value>additional text field</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="textFound" xml:space="preserve">
    <value>the text was found </value>
  </data>
  <data name="Thema" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="TitleBoolPropertiesField" xml:space="preserve">
    <value>Switch name</value>
  </data>
  <data name="TitleDaterPropertiesField" xml:space="preserve">
    <value>Name of the field with the date</value>
  </data>
  <data name="TitleNumberPropertiesField" xml:space="preserve">
    <value>Name of the additional number field</value>
  </data>
  <data name="TitleStringPropertiesField" xml:space="preserve">
    <value>Name of the additional text field</value>
  </data>
  <data name="UnBan" xml:space="preserve">
    <value>Unban</value>
  </data>
  <data name="UserHasNoRoles" xml:space="preserve">
    <value>The user has no roles</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>UserName</value>
  </data>
  <data name="WriteTagsWith" xml:space="preserve">
    <value>Enter tags separated by commas(,)</value>
  </data>
</root>